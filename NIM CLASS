import java.util.Random;
import java.util.Scanner;

public class Nim {
	private Heap[] heap;
	//private int numHeaps; //number of heaps selected
	private Random randomNumbers;
	private int i;

	private Scanner input = new Scanner(System.in);

	public Nim()
	{
		heap = new Heap[3];
		for(i=0;i<3;i++){
			heap[i] = new Heap (10);
		}
		randomNumbers = new Random ();
	}

	public boolean playerMove()
	{
		System.out.print("\nSelect a heap: ");
		char heapLetter = input.next().charAt(0);
		Heap tempHeap;

		switch(heapLetter)
		{
		case 'a':
		case 'A':
			tempHeap=heap[0];
			break;
		case 'b':
		case 'B':
			tempHeap=heap[1];
			break;
		case 'c':
		case 'C':
			tempHeap=heap[2];
			break;
		default:
			System.out.println("Invalid heap letter, select a, b or c");
			return false;
		}

		if(tempHeap.isEmpty())
		{
			System.out.println("Heap "+heapLetter+" is empty, pick another");
			return false;
		}

		System.out.print("How many do you want to remove? ");
		int number = input.nextInt();

		return tempHeap.remove(number);
	}

	public void gameMove()
	{
		Heap tempHeap;
		boolean valid;
		char select;
		do {
			int heapId = randomNumbers.nextInt(3);
			switch(heapId)
			{
			case 0:
				tempHeap=heap[0];
				select='A';
				break;
			case 1:
				tempHeap=heap[1];
				select='B';
				break;
			default:
				tempHeap=heap[2];
				select='C';
				break;
			}
			if(tempHeap.isEmpty())
			{
				valid=false;
			} else {
				valid=true;
				int size=randomNumbers.nextInt(tempHeap.getSize())+1;
				tempHeap.remove(size);
				System.out.println("Computer takes "+size+" from heap "+select);
			}

		} while(!valid);

	}

	public void printHeaps()
	{
		System.out.println("\tA\tB\tC");

		for(i=0;i<3;i++){
			heap[i].displaySize();
		}
		System.out.println();
	}

	public boolean gameDone()
	{
		return heap[0].isEmpty() && heap[1].isEmpty() && heap[2].isEmpty();
	}

	private char toChar(int index)
	{
		return (char)('A'+index);
	}

	private int toInt(String letter)
	{
		return letter.toUpperCase().charAt(0)-'A';
	}

}
